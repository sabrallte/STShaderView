package ui;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.ArrayList;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import helpers.SourceCodeLoader;
import interfaces.ITabbedPanel;
import interfaces.IValueSubmittedListener;
import strategys.shadertoy;

/**
 *
 * @author sabrallte
 */
public class DownloadPanel extends javax.swing.JPanel implements ITabbedPanel {

    /**
     * Creates new form DownloadPanel
     */
    public DownloadPanel() {
        initComponents();
        
        //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		jb_download.addActionListener(new java.awt.event.ActionListener() {
			// Beim Drücken des Menüpunktes wird actionPerformed aufgerufen
			public void actionPerformed(java.awt.event.ActionEvent e) {

				SourceCodeLoader scl = new SourceCodeLoader();

				if (scl.load(jtf_url_value.getText(), false) == null) {
					String[] optional_shaders = new String[] {};
					optional_shaders = scl.getOptionalShaders();
					String selection = showDialog(optional_shaders);

					if ( (selection!= null) && (scl.load(selection, true) != null)) {}
					else{
						System.out.println("ERROR: Could not load Shader %s".format(selection));
						jtf_url_value.setText("ERROR: Could not load Shader %s".format(selection));
					}
				}
				jtf_url_value.setText("Download Finished!");
			}
		});
		//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        
    }
    
  //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	public String showDialog(String[] optional_shaders) {
		ImageIcon icon = new ImageIcon();
    	String s = (String)JOptionPane.showInputDialog(
    	                    this,
    	                    "There is more than one Shader\n"
    	                    + "\"at this URL available, choose one:\"",
    	                    "Select Shader",
    	                    JOptionPane.PLAIN_MESSAGE,
    	                    icon,
    	                    optional_shaders,
    	                    "");

    	//If a string was returned, say so.
    	if ((s != null) && (s.length() > 0)) {
    		System.out.println("Dialog, selected: %s".format(s));
    		return s;
    	}
    	return null;

	}
	
	private List<IValueSubmittedListener> listeners = new ArrayList<IValueSubmittedListener>();

    public void addListener(IValueSubmittedListener listener) {
        listeners.add(listener);
    }

    private void notifyListeners() {
    	for (IValueSubmittedListener listener : listeners) {
    		listener.onSubmitted("");
    	}
    }
    
    @Override
	public void onTabSelected() {
	}


	@Override
	public void setActiveShader(shadertoy shader) {
		// TODO Auto-generated method stub
		
	}
	
	//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jl_describtion_1 = new javax.swing.JLabel();
        jl_describtion_3 = new javax.swing.JLabel();
        jl_describtion_2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jl_url = new javax.swing.JLabel();
        jtf_url_value = new javax.swing.JTextField();
        jb_download = new javax.swing.JButton();

        setMinimumSize(null);

        jl_describtion_1.setText("Paste the URL from your desired shader from shadertoy.com into the Textfield.");

        jl_describtion_3.setForeground(new java.awt.Color(153, 153, 153));
        jl_describtion_3.setText("Note: Not all kinds of Shaders are supported (e.g. VR).");

        jl_describtion_2.setText("e.g: https://www.shadertoy.com/view/Ms2SD1 ");

        jl_url.setText("URL:");

        jb_download.setText("Download");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jl_describtion_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jl_describtion_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jl_describtion_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(150, 150, 150)))
                        .addGap(3, 3, 3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl_url)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_url_value)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jb_download, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_describtion_1)
                .addGap(1, 1, 1)
                .addComponent(jl_describtion_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_describtion_3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_url)
                    .addComponent(jtf_url_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_download)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>     

    // Variables declaration - do not modify                     
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jb_download;
    private javax.swing.JLabel jl_describtion_1;
    private javax.swing.JLabel jl_describtion_2;
    private javax.swing.JLabel jl_describtion_3;
    private javax.swing.JLabel jl_url;
    private javax.swing.JTextField jtf_url_value;
    // End of variables declaration                   
}

